#include <stdio.h>

#define TAM 10       // Tamanho do tabuleiro (10x10)
#define NAVIO 3      // Valor para representar o navio no tabuleiro
#define AGUA 0       // Valor para representar água
#define TAM_NAVIO 3  // Tamanho fixo dos navios

// Função para inicializar o tabuleiro com água (0)
void inicializarTabuleiro(int tabuleiro[TAM][TAM]) {
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            tabuleiro[i][j] = AGUA;
        }
    }
}

// Função para verificar se o navio cabe no tabuleiro (horizontal)
int podeColocarHorizontal(int linha, int coluna) {
    return (coluna + TAM_NAVIO <= TAM);
}

// Função para verificar se o navio cabe no tabuleiro (vertical)
int podeColocarVertical(int linha, int coluna) {
    return (linha + TAM_NAVIO <= TAM);
}

// Função para verificar se existe sobreposição (horizontal)
int sobreposicaoHorizontal(int tabuleiro[TAM][TAM], int linha, int coluna) {
    for (int j = 0; j < TAM_NAVIO; j++) {
        if (tabuleiro[linha][coluna + j] == NAVIO) {
            return 1; // Existe sobreposição
        }
    }
    return 0;
}

// Função para verificar se existe sobreposição (vertical)
int sobreposicaoVertical(int tabuleiro[TAM][TAM], int linha, int coluna) {
    for (int i = 0; i < TAM_NAVIO; i++) {
        if (tabuleiro[linha + i][coluna] == NAVIO) {
            return 1; // Existe sobreposição
        }
    }
    return 0;
}

// Função para posicionar navio horizontal
void posicionarHorizontal(int tabuleiro[TAM][TAM], int linha, int coluna) {
    for (int j = 0; j < TAM_NAVIO; j++) {
        tabuleiro[linha][coluna + j] = NAVIO;
    }
}

// Função para posicionar navio vertical
void posicionarVertical(int tabuleiro[TAM][TAM], int linha, int coluna) {
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linha + i][coluna] = NAVIO;
    }
}

// Função para exibir o tabuleiro
void exibirTabuleiro(int tabuleiro[TAM][TAM]) {
    printf("\nTabuleiro:\n\n");
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int tabuleiro[TAM][TAM];

    // Inicializa o tabuleiro com água
    inicializarTabuleiro(tabuleiro);

    // Coordenadas iniciais fixas dos navios (definidas no código)
    int linhaNavioH = 2, colunaNavioH = 4; // navio horizontal
    int linhaNavioV = 5, colunaNavioV = 7; // navio vertical

    // Verifica se o navio horizontal pode ser colocado
    if (podeColocarHorizontal(linhaNavioH, colunaNavioH) &&
        !sobreposicaoHorizontal(tabuleiro, linhaNavioH, colunaNavioH)) {
        posicionarHorizontal(tabuleiro, linhaNavioH, colunaNavioH);
    } else {
        printf("Erro: não foi possível posicionar o navio horizontal.\n");
    }

    // Verifica se o navio vertical pode ser colocado
    if (podeColocarVertical(linhaNavioV, colunaNavioV) &&
        !sobreposicaoVertical(tabuleiro, linhaNavioV, colunaNavioV)) {
        posicionarVertical(tabuleiro, linhaNavioV, colunaNavioV);
    } else {
        printf("Erro: não foi possível posicionar o navio vertical.\n");
    }

    // Exibe o tabuleiro final
    exibirTabuleiro(tabuleiro);

    return 0;
}
